name: Build, package and upload
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
        id: go
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ github.repository }}-${{ hashFiles('**/go.sum') }}
      - name: Build
        run: make build
      - name: Test
        run: make test
      - name: Upload to codecov
        run: bash <(curl -s https://codecov.io/bash)
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist/
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.x
      - name: Install gems
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
      - name: Download site artifact
        uses: actions/download-artifact@v1
        with:
          name: dist
      - name: Package
        run: make package
        env:
          BUILD_NUMBER: ${{ github.run_number }}
      - name: Upload to Apt repo
        env:
          APT_CREDENTIALS: ${{ secrets.APT_CREDENTIALS }}
          APT_KEY_PASSPHRASE: ${{ secrets.APT_KEY_PASSPHRASE }}
        run: |
          echo $APT_CREDENTIALS > aptly-auth
          find -type f -name "*.deb" -exec curl -f --netrc-file aptly-auth -XPOST -F file=@{} https://apttoo.growse.com/api/files/locator-and-search \;
          export result=$(curl -f --netrc-file aptly-auth -X POST https://apttoo.growse.com/api/repos/defaultrepo/file/locator-and-search)
          echo $result
          export failed=$(echo $result | jq '.FailedFiles | length')
          if [[ "$failed" != "0" ]]; then exit 1; fi
          curl -f --netrc-file aptly-auth -X PUT -H"Content-type: application/json" --data '{"Signing":{"Passphrase":"'"$APT_KEY_PASSPHRASE"'","Batch":true}}' https://apttoo.growse.com/api/publish/:./stablish
